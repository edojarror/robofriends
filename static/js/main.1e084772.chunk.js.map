{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA2BL,EAA3B,cACrB,gCACI,6BAAMC,IACN,4BAAKC,WCeNI,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACI,8BACKA,EACIC,KAAI,SAACC,EAAMC,GACR,OACI,cAAC,EAAD,CAEQV,GAAKO,EAAOG,GAAGV,GACfC,KAAOM,EAAOG,GAAGT,KACjBC,MAAQK,EAAOG,GAAGR,OAHbK,EAAOG,GAAGV,UCIhCW,EAbG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC9B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,kBACZC,SAAUH,OCCXI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCmBJC,E,kDArBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAW,GAHA,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAW,M,oBAG9B,WAEI,OAAOG,KAAKJ,MAAMC,SACd,0DACAG,KAAKX,MAAMK,a,GAhBIQ,aC+CZC,G,wDAzCX,aAAgB,IAAD,8BACX,gBAaJC,eAAiB,SAACC,GACV,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAb7C,EAAKX,MAAQ,CACTlB,OAAS,GACTK,YAAc,IAJP,E,qDAQf,WAAqB,IAAD,OACjByB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA7B,GAAI,OAAI,EAAKqB,SAAS,CAACvB,OAASE,S,oBAM1C,WAAU,IAAD,EAC2BoB,KAAKJ,MAA7BlB,EADH,EACGA,OAAQK,EADX,EACWA,YACV6B,EAAiBlC,EAAOmC,QAAO,SAAAC,GACjC,OAAOA,EAAM1C,KAAK2C,cAAcC,SAASjC,EAAYgC,kBAEzD,OAA0B,KAAlBrC,EAAOuC,OACX,yCAEI,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQkC,e,GA/B5BV,cCKHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,8BACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1e084772.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 ma2 pa3 grow bw2 shadow-5\">\r\n            <img alt=\"robots\" src={`https://robohash.org/${ id }?200x200`} />\r\n            <div>\r\n                <h2>{ name }</h2>\r\n                <p>{ email }</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    \r\n    return (\r\n        <div>\r\n           { robots\r\n                .map((user, i) => {\r\n                    return (\r\n                        <Card \r\n                                key={robots[i].id}\r\n                                id={ robots[i].id } \r\n                                name={ robots[i].name } \r\n                                email={ robots[i].email } />\r\n                    )    \r\n                })\r\n            }\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input \r\n                className=\"pa3 ba b--green bg-lightest-blue\"\r\n                type=\"search\" \r\n                placeholder=\"Search for Robo\" \r\n                onChange={searchChange} />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: \"scroll\", border: \"5px solid black\", height: \"600px\"}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError : true})\r\n    }\r\n\r\n    render() {     \r\n        \r\n        return this.state.hasError ?\r\n            <h1>Oooops. That is not good</h1>:\r\n            this.props.children\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n    constructor () {\r\n        super();\r\n        this.state = {\r\n            robots : [],\r\n            searchfield : \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n       fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json()) \r\n        .then(user => this.setState({robots : user}))\r\n    }\r\n\r\n    onSearchChange = (event) => { \r\n            this.setState({searchfield: event.target.value})\r\n    }\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        return !robots.length === 0 ? \r\n            <h1>Loading</h1>: \r\n            (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f1\">Robo Friends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}  />\r\n                    <Scroll >\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                        \r\n                    </Scroll>      \r\n                </div>\r\n            ); \r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div >\n      <App />  \n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}